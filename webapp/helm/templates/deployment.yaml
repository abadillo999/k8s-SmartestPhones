apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ .Values.global.webapp_name }}-deployment
    labels:
       app: {{ .Values.global.webapp_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.global.webapp_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.webapp_name }}
    spec:
        initContainers:
        - name: {{ .Values.global.webapp_name }}-init
          image: {{ .Values.global.initContainer.registry}}{{ .Values.global.initContainer.image }} 
          imagePullPolicy: IfNotPresent
          command: ["sh","-c"]
          args:
            - sleep 10;
              until nslookup {{ .Values.global.mailserver_name }}-service;
              do sleep 2;
              done;
              nc -w 1 -z {{ .Values.global.mailserver_name }}-service {{ .Values.global.mailserver_port }}
        containers:
        - name: {{ .Values.global.webapp_name }}
          image: {{ .Values.global.registry }}{{ .Values.usvc.image.name }}:{{ .Values.usvc.image.tag }}
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: {{ .Values.global.webapp_port }}  

---    
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.global.webapp_name }}-service
spec:
  type: NodePort
  selector:
    app: {{ .Values.global.webapp_name }}
  ports:
  - protocol: TCP
    port: {{ .Values.global.webapp_port }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: name-virtual-host-ingress
spec:
  rules:
  - host: {{ .Values.global.webapp_name }}.com
    http:
      paths:
      - backend:
          serviceName: {{ .Values.global.webapp_name }}-service
          servicePort: {{ .Values.global.webapp_port }}
  - host: {{ .Values.global.mailserver_name }}.com
    http:
      paths:
      - backend:
          serviceName: {{ .Values.global.mailserver_name }}-service
          servicePort: {{ .Values.global.mailserver_port }}